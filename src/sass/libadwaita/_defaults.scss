/* GTK NAMED COLORS
   ----------------
   use responsibly! */

// Sass thinks we're using the colors in the variables as strings and may shoot
// warning, it's innocuous and can be defeated by using #{$var}.

// These are the colors apps are can override. We define the defaults here and
// define variables for them in _colors.scss

@if $theme != 'default' or $colorscheme != 'default' or $colortype == 'fixed' {
// The main accent color and the matching text value
@define-color accent_bg_color #{$primary};
@define-color accent_fg_color #{on($primary)};
@define-color accent_color #{$primary};
}

// destructive-action buttons
@define-color destructive_bg_color #{$destructive};
@define-color destructive_fg_color #{on($destructive)};
@define-color destructive_color #{$destructive};

// Levelbars, entries, labels and infobars. These don't need text colors
@define-color success_bg_color #{$success};
@define-color success_fg_color #{on($success)};
@define-color success_color #{$success};

@define-color warning_bg_color #{$warning};
@define-color warning_fg_color #{on($warning)};
@define-color warning_color #{$warning};

@define-color error_bg_color #{$error};
@define-color error_fg_color #{on($error)};
@define-color error_color #{$error};

@if $colorscheme != 'default' or $blackness == 'true' or $colortype == 'fixed' {
// Window
@define-color window_bg_color #{$background};
@define-color window_fg_color #{$text};

// Views - e.g. text view or tree view
@define-color view_bg_color #{$base};
@define-color view_fg_color #{$text};

// Header bar, search bar, tab bar
@define-color headerbar_bg_color #{$titlebar-backdrop};
@define-color headerbar_fg_color #{$titlebar-text};
@define-color headerbar_border_color #{$titlebar-text};
@define-color headerbar_backdrop_color #{$titlebar};
@define-color headerbar_shade_color #{if($variant == 'light', transparentize(black, .88), transparentize(black, .64))};
@define-color headerbar_darker_shade_color #{$window-border};

// Split pane views
@define-color sidebar_bg_color #{$sidebar};
@define-color sidebar_fg_color #{on($sidebar)};
@define-color sidebar_backdrop_color #{$sidebar-backdrop};
@define-color sidebar_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .75))};
@define-color sidebar_border_color #{transparentize(on($sidebar), .92)};

@define-color secondary_sidebar_bg_color #{$base};
@define-color secondary_sidebar_fg_color #{$text};
@define-color secondary_sidebar_backdrop_color #{$background};
@define-color secondary_sidebar_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .75))};
@define-color secondary_sidebar_border_color #{$border};

// Cards, boxed lists
@define-color card_bg_color #{if($variant == 'light', $base, $fill)};
@define-color card_fg_color #{$text};
@define-color card_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .64))};

// Dialogs
@define-color dialog_bg_color #{$base-alt};
@define-color dialog_fg_color #{$text};

// Popovers
@define-color popover_bg_color #{$popover};
@define-color popover_fg_color #{$text};
@define-color popover_shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .75))};

// Thumbnails
@define-color thumbnail_bg_color #{$surface};
@define-color thumbnail_fg_color #{$text};

// Miscellaneous
@define-color shade_color #{if($variant == 'light', transparentize(black, .93), transparentize(black, .75))};
@define-color scrollbar_outline_color #{if($variant == 'light', white, transparentize(black, .5))};
}
